1
00:00:00,000 --> 00:00:02,540
My name is Josh Wills.

2
00:00:02,540 --> 00:00:04,820
I am a DuckDB enthusiast.

3
00:00:04,820 --> 00:00:07,100
I am also a software engineer

4
00:00:07,100 --> 00:00:09,160
at a little company called WeaveGrid.

5
00:00:09,160 --> 00:00:11,240
At least I am for one more day.

6
00:00:11,240 --> 00:00:13,680
Tomorrow is my last day at WeaveGrid.

7
00:00:13,680 --> 00:00:18,600
I'm taking a little break to do nothing and spend some time with

8
00:00:18,600 --> 00:00:23,440
my family and my favorite embedded OLAP database,

9
00:00:23,440 --> 00:00:25,380
which is DuckDB.

10
00:00:25,380 --> 00:00:28,080
But today, I'm not going to talk about DuckDB.

11
00:00:28,080 --> 00:00:30,620
I'm going to talk about using one big machine

12
00:00:30,620 --> 00:00:32,720
for model training and inference.

13
00:00:32,720 --> 00:00:36,820
To that end, I want to tell a story.

14
00:00:36,820 --> 00:00:39,640
It's a story where I have adapted

15
00:00:39,640 --> 00:00:45,060
the midwit meme to be entirely about myself, more or less.

16
00:00:45,060 --> 00:00:49,020
From young Josh to mid-career Josh,

17
00:00:49,020 --> 00:00:54,380
to elderly sage Josh, if you will, roughly speaking.

18
00:00:54,380 --> 00:00:59,980
How my thinking around using one big machine for doing ML,

19
00:00:59,980 --> 00:01:01,600
doing model training, doing model inference

20
00:01:01,600 --> 00:01:03,780
has evolved over time.

21
00:01:03,780 --> 00:01:09,300
To that end, I want to talk about my first job.

22
00:01:09,300 --> 00:01:12,660
I graduated from college back in 2001.

23
00:01:12,660 --> 00:01:16,660
My very first job was working at IBM in Austin,

24
00:01:16,660 --> 00:01:20,540
Texas at a microprocessor,

25
00:01:20,540 --> 00:01:22,420
what is called a bring up facility.

26
00:01:22,420 --> 00:01:26,380
It's a place where basically engineers develop and test

27
00:01:26,380 --> 00:01:30,580
microprocessors before they totally work yet,

28
00:01:30,580 --> 00:01:32,140
would be the way to say it.

29
00:01:32,140 --> 00:01:35,140
The logic of the microprocessor is very new,

30
00:01:35,140 --> 00:01:37,220
so we're still testing it, we're still iterating on it,

31
00:01:37,220 --> 00:01:39,740
we're still trying to figure out how well these things work.

32
00:01:39,740 --> 00:01:44,780
I was hired as a data analyst to basically analyze

33
00:01:44,780 --> 00:01:46,260
all of this data they were collecting about

34
00:01:46,260 --> 00:01:50,020
microprocessors to see if I could figure out,

35
00:01:50,020 --> 00:01:52,740
if I could build predictive models that would give us

36
00:01:52,740 --> 00:01:55,700
an idea of whether or not a particular processor

37
00:01:55,700 --> 00:01:58,060
would run at a certain clock speed,

38
00:01:58,060 --> 00:02:01,100
or whether it would work at all, or anything like that.

39
00:02:01,100 --> 00:02:04,420
Since this was 2001, to do this work,

40
00:02:04,420 --> 00:02:07,660
I had a big computer underneath my desk,

41
00:02:07,660 --> 00:02:11,060
and that big computer ran MySQL database,

42
00:02:11,060 --> 00:02:12,620
and it ran a web server,

43
00:02:12,620 --> 00:02:15,300
and it ran R and Perl,

44
00:02:15,300 --> 00:02:19,140
because that's what we did back in 2001, we wrote Perl.

45
00:02:19,140 --> 00:02:22,940
My job was to build dashboards,

46
00:02:22,940 --> 00:02:25,140
again, primarily in Perl,

47
00:02:25,140 --> 00:02:27,860
and write analyses primarily in R,

48
00:02:27,860 --> 00:02:31,540
like way back in the day, to build predictive models.

49
00:02:31,540 --> 00:02:33,220
It was pretty great.

50
00:02:33,220 --> 00:02:35,420
It was about five gigabytes of data,

51
00:02:35,420 --> 00:02:36,540
which I'll be honest with you all,

52
00:02:36,540 --> 00:02:38,460
seemed like a lot of data back in 2001.

53
00:02:38,460 --> 00:02:41,860
That was not a small amount of data back then.

54
00:02:41,860 --> 00:02:45,540
Yeah, that was what I did, that was my job.

55
00:02:45,540 --> 00:02:47,460
I'm doing this for a while,

56
00:02:47,460 --> 00:02:48,860
and I'm building my dashboards,

57
00:02:48,860 --> 00:02:51,700
and I start getting curious,

58
00:02:51,700 --> 00:02:54,060
I think in the way that Juliet was just talking about,

59
00:02:54,060 --> 00:02:55,700
just now, a second ago,

60
00:02:55,700 --> 00:02:58,900
about how exactly this database software worked,

61
00:02:58,900 --> 00:03:00,500
and how it was configured,

62
00:03:00,500 --> 00:03:03,260
and how I could make it run better,

63
00:03:03,260 --> 00:03:05,580
how I could make my dashboards run faster,

64
00:03:05,580 --> 00:03:07,620
how I could pull more data out of the database,

65
00:03:07,620 --> 00:03:08,740
all that kind of stuff.

66
00:03:08,740 --> 00:03:11,860
And so I started getting pretty good

67
00:03:11,860 --> 00:03:15,860
at administering a MySQL database.

68
00:03:15,860 --> 00:03:17,060
And I was proud of myself,

69
00:03:17,060 --> 00:03:18,660
because everyone thought this was useful,

70
00:03:18,660 --> 00:03:20,180
and people would come and ask me questions,

71
00:03:20,180 --> 00:03:21,020
and stuff like that.

72
00:03:21,020 --> 00:03:23,420
I was feeling very good about myself as an engineer.

73
00:03:24,700 --> 00:03:26,940
And then fortunately, my boss at the time,

74
00:03:26,940 --> 00:03:28,540
this guy named Greg Wettele,

75
00:03:28,540 --> 00:03:30,700
came and took me aside and said,

76
00:03:30,700 --> 00:03:32,260
stop getting good at that.

77
00:03:33,140 --> 00:03:35,780
Don't get any better at that than you are right now,

78
00:03:35,780 --> 00:03:37,220
because if you get too good

79
00:03:37,220 --> 00:03:39,500
at administering a MySQL database,

80
00:03:39,500 --> 00:03:41,660
people will pay you to administer databases

81
00:03:41,660 --> 00:03:43,340
for the rest of your life.

82
00:03:43,340 --> 00:03:45,580
And that's probably not what you want to do.

83
00:03:45,580 --> 00:03:47,940
Like, it's not actually going to lead you to a happy place.

84
00:03:47,940 --> 00:03:50,660
Like, there's other stuff that you should be doing instead.

85
00:03:50,660 --> 00:03:51,980
And so I was like, wow, Greg, thank you.

86
00:03:51,980 --> 00:03:54,500
That's like super great, super useful management advice.

87
00:03:54,500 --> 00:03:57,180
And I think it's good for all the managers out there to say,

88
00:03:57,180 --> 00:03:59,220
ask your directors when they're like getting good

89
00:03:59,220 --> 00:04:01,780
at something, are you sure you want to get good at that?

90
00:04:01,780 --> 00:04:03,540
So I took Greg's advice,

91
00:04:03,540 --> 00:04:05,420
and then I proceeded to ignore it

92
00:04:05,420 --> 00:04:08,740
for the next 20 years or so, roughly speaking.

93
00:04:08,740 --> 00:04:12,700
I left IBM, and I went and worked at a bunch of startups,

94
00:04:12,700 --> 00:04:15,700
and then I went to Google, and then I went to Cloudera,

95
00:04:15,700 --> 00:04:17,380
and then I went to Slack.

96
00:04:17,380 --> 00:04:22,220
And in all this time, I got sort of, unfortunately,

97
00:04:22,220 --> 00:04:26,500
really, really good at building large-scale data pipelines

98
00:04:26,500 --> 00:04:29,260
on distributed systems and stuff like that.

99
00:04:29,260 --> 00:04:31,260
So this picture I'm showing you here

100
00:04:31,260 --> 00:04:35,060
is a little image I grabbed from an AWS blog post

101
00:04:35,060 --> 00:04:40,060
about running Spark on top of Kubernetes using EMR.

102
00:04:40,380 --> 00:04:44,460
And I understand all of the things in this picture.

103
00:04:44,460 --> 00:04:47,380
I know how to use all of the tools you see here.

104
00:04:48,940 --> 00:04:50,540
And that's not a good thing.

105
00:04:51,620 --> 00:04:53,300
That's kind of like a tragedy.

106
00:04:53,300 --> 00:04:54,780
No one should actually understand

107
00:04:54,780 --> 00:04:56,140
how to use all of this stuff.

108
00:04:56,140 --> 00:04:59,140
But sadly, I do, because I have used all of these

109
00:04:59,140 --> 00:05:01,220
technologies at some point in my career.

110
00:05:01,220 --> 00:05:04,300
And so I can look at this thing and be like, yeah, okay,

111
00:05:04,300 --> 00:05:05,140
this makes sense to me.

112
00:05:05,140 --> 00:05:06,860
I sort of see how this all hangs together.

113
00:05:06,860 --> 00:05:09,260
I could use something like this.

114
00:05:09,260 --> 00:05:11,580
So anyway, that's not a great place to be,

115
00:05:11,580 --> 00:05:12,420
but that was what I did.

116
00:05:12,420 --> 00:05:15,140
That's what I've done for the last 20 years or so.

117
00:05:15,140 --> 00:05:20,140
So anyway, four years at Google, four years at Cloudera,

118
00:05:20,180 --> 00:05:22,140
four years at Slack,

119
00:05:22,140 --> 00:05:24,340
I was pretty tired after all of that kind of stuff.

120
00:05:24,340 --> 00:05:27,100
And so I decided at the end of 2019

121
00:05:27,100 --> 00:05:28,980
that I would take a little break.

122
00:05:28,980 --> 00:05:30,900
I was pretty burned out,

123
00:05:30,900 --> 00:05:33,660
didn't really want to be doing stuff with computers anymore.

124
00:05:33,660 --> 00:05:36,380
So I decided November, 2019, that's it, I'm done.

125
00:05:36,380 --> 00:05:37,340
I'm gonna step away.

126
00:05:37,340 --> 00:05:40,940
And I really didn't like touch a computer in anger

127
00:05:40,940 --> 00:05:42,660
for about four months or so.

128
00:05:42,660 --> 00:05:44,540
I really just kind of like traveled and read books

129
00:05:44,540 --> 00:05:46,060
and just kind of like reset myself.

130
00:05:46,060 --> 00:05:47,060
And it was really great.

131
00:05:47,060 --> 00:05:48,420
And I was really like asking myself,

132
00:05:48,420 --> 00:05:50,420
like, what do I want to do?

133
00:05:50,420 --> 00:05:52,380
I was basically having like a midlife crisis, more or less.

134
00:05:52,380 --> 00:05:54,220
I think would be like the technical term for it.

135
00:05:54,220 --> 00:05:55,460
Like, what do I want to do?

136
00:05:55,460 --> 00:05:58,900
Why, like, what is the point of all of this like stuff

137
00:05:58,900 --> 00:06:01,380
I've learned how to do over the course of my career?

138
00:06:01,380 --> 00:06:02,660
Like, do I want to keep doing this?

139
00:06:02,660 --> 00:06:03,980
Is this making me happy?

140
00:06:03,980 --> 00:06:05,660
All that sort of stuff.

141
00:06:05,660 --> 00:06:09,900
And then as it so happened, March, 2020 rolled around

142
00:06:09,900 --> 00:06:13,060
and I got a call from my friend, DJ Patel.

143
00:06:13,060 --> 00:06:16,020
He used to be Chris's boss at Devoted Health

144
00:06:16,020 --> 00:06:19,100
before DJ had the good sense to fire Chris.

145
00:06:19,100 --> 00:06:20,620
And has done a lot of cool stuff.

146
00:06:20,620 --> 00:06:21,540
He called me up and he's like,

147
00:06:21,540 --> 00:06:23,500
I am going over to Sacramento.

148
00:06:23,500 --> 00:06:25,540
This is like early March, 2020,

149
00:06:25,540 --> 00:06:27,540
to help out with COVID relief stuff.

150
00:06:27,540 --> 00:06:30,060
And I think I could use some software engineers

151
00:06:30,060 --> 00:06:32,900
and some data people and you are unemployed.

152
00:06:32,900 --> 00:06:35,900
And will you like, can you give me a hand basically?

153
00:06:35,900 --> 00:06:39,340
And I'm like, sure, DJ, anything you need, happy to help.

154
00:06:39,340 --> 00:06:42,380
So he introduced me to a team of epidemiologists

155
00:06:42,380 --> 00:06:43,980
at Johns Hopkins and folks

156
00:06:43,980 --> 00:06:46,460
at the Department of Public Health in California.

157
00:06:46,460 --> 00:06:49,220
And he said, we are running these big models,

158
00:06:49,220 --> 00:06:52,620
these gigantic simulations to understand the impact

159
00:06:52,620 --> 00:06:55,340
of social distancing, of shutting down the schools,

160
00:06:55,340 --> 00:06:58,420
of all this kind of stuff on the spread of COVID

161
00:06:58,420 --> 00:07:01,580
in the state of California over the next few weeks.

162
00:07:01,580 --> 00:07:03,180
We've been doing this for a few weeks.

163
00:07:03,180 --> 00:07:04,460
We're all really tired.

164
00:07:04,460 --> 00:07:05,940
No one slept.

165
00:07:05,940 --> 00:07:06,900
Can you help us?

166
00:07:06,900 --> 00:07:08,700
Can you help us run more of these things?

167
00:07:08,700 --> 00:07:11,820
Can you help us run a lot more of these simulations?

168
00:07:11,820 --> 00:07:13,180
And can you do it really, really quickly?

169
00:07:13,180 --> 00:07:14,820
Cause we have to present this stuff to the governor

170
00:07:14,820 --> 00:07:16,580
in like two days.

171
00:07:16,580 --> 00:07:19,220
And so I was like, yes, absolutely.

172
00:07:19,220 --> 00:07:20,180
I would love to help.

173
00:07:20,180 --> 00:07:21,740
Here's basically what we're gonna do.

174
00:07:21,740 --> 00:07:23,260
We're gonna take a whole bunch,

175
00:07:23,260 --> 00:07:25,860
we're gonna take your program and your simulations.

176
00:07:25,860 --> 00:07:28,620
And we are going to spend a bunch of money

177
00:07:28,620 --> 00:07:32,260
and spin up the largest machines we can possibly buy on AWS.

178
00:07:32,260 --> 00:07:34,500
And we're gonna run as many of these simulations

179
00:07:34,500 --> 00:07:38,420
as humanly possible in the next 48 to 72 hours.

180
00:07:38,420 --> 00:07:40,500
And sort of just kind of see how it goes.

181
00:07:40,500 --> 00:07:42,180
Like that's our plan.

182
00:07:42,180 --> 00:07:43,500
And I was very nervous about doing this

183
00:07:43,500 --> 00:07:45,980
because I have been like horizontal scalability

184
00:07:45,980 --> 00:07:47,340
my entire career.

185
00:07:47,340 --> 00:07:49,460
And here I am in this emergency situation saying,

186
00:07:49,460 --> 00:07:51,780
okay, forget all of that stuff.

187
00:07:51,780 --> 00:07:54,900
We're gonna do vertical scaling just as fast as we can,

188
00:07:54,900 --> 00:07:56,060
as much money as we can.

189
00:07:56,060 --> 00:07:58,340
Doesn't matter, like let's go to it.

190
00:07:58,340 --> 00:08:00,660
And so that's what we did.

191
00:08:00,660 --> 00:08:03,180
We went to AWS, swiped the old credit card

192
00:08:03,180 --> 00:08:05,500
and got ourselves some really, really big machines.

193
00:08:05,500 --> 00:08:07,100
Honestly, the hardest part of the process

194
00:08:07,100 --> 00:08:11,500
was finding someone at AWS to like lift my reservation limit

195
00:08:11,500 --> 00:08:13,660
so I could basically get more machines.

196
00:08:13,660 --> 00:08:14,660
Like I wanted, I was like, AWS,

197
00:08:14,660 --> 00:08:16,180
like please let me give you more money.

198
00:08:16,180 --> 00:08:17,700
And they like wouldn't let me and stuff.

199
00:08:17,700 --> 00:08:20,060
That was the hardest part of the problem.

200
00:08:20,060 --> 00:08:22,780
And so I did that, I did that kind of work for a few months

201
00:08:22,780 --> 00:08:24,340
and I absolutely loved it.

202
00:08:24,340 --> 00:08:27,100
And it kind of like rediscovered and rekindled my joy

203
00:08:27,100 --> 00:08:29,860
in doing data science and doing machine learning

204
00:08:29,860 --> 00:08:31,660
and doing computer stuff in general.

205
00:08:32,620 --> 00:08:35,260
And I wanna kind of talk about why and how great it was

206
00:08:35,260 --> 00:08:37,500
because it's kind of stuck with me.

207
00:08:37,500 --> 00:08:39,340
And after that sort of work was done

208
00:08:39,340 --> 00:08:41,620
and I moved on from doing COVID stuff and I was like,

209
00:08:41,620 --> 00:08:43,060
okay, how else can I help?

210
00:08:43,060 --> 00:08:43,900
Because to be honest with you,

211
00:08:43,900 --> 00:08:46,460
helping is like just the best feeling in the world.

212
00:08:47,500 --> 00:08:49,540
I decided to go work at a little company called WeaveGrid,

213
00:08:49,540 --> 00:08:51,820
which was all of like 10 people at the time

214
00:08:51,820 --> 00:08:55,500
that wanted to build managed charging systems for EVs.

215
00:08:55,500 --> 00:08:57,340
And if you're building managed charging systems for EVs,

216
00:08:57,340 --> 00:08:58,620
there's a couple of different interesting

217
00:08:58,620 --> 00:09:00,500
machine learning problems you have to solve.

218
00:09:00,500 --> 00:09:02,340
You have to get good, first of all,

219
00:09:02,340 --> 00:09:05,420
at identifying households that have electric vehicles

220
00:09:05,420 --> 00:09:07,980
from the patterns in their meter data.

221
00:09:07,980 --> 00:09:09,460
You have to get good at predicting

222
00:09:09,460 --> 00:09:11,940
when those cars are going to get home.

223
00:09:11,940 --> 00:09:13,580
You have to get good at knowing how often

224
00:09:13,580 --> 00:09:15,780
you can wake up a car without running down its battery.

225
00:09:15,780 --> 00:09:17,740
There's all kinds of interesting, interesting ML stuff

226
00:09:17,740 --> 00:09:19,940
that you have to solve to do these things.

227
00:09:19,940 --> 00:09:21,660
And my commitment when I got to WeaveGrid

228
00:09:21,660 --> 00:09:24,180
was to keep things as norm core as I could,

229
00:09:24,180 --> 00:09:27,500
to kind of stick with this model of like one big machine,

230
00:09:27,500 --> 00:09:29,260
solve all the problems with the one big machine

231
00:09:29,260 --> 00:09:30,900
whenever possible.

232
00:09:30,900 --> 00:09:32,340
And I want to tell you about like why I think

233
00:09:32,340 --> 00:09:33,660
you should embrace this as well

234
00:09:33,660 --> 00:09:35,420
and why using one big machine

235
00:09:35,420 --> 00:09:36,700
to solve machine learning problems

236
00:09:36,700 --> 00:09:39,180
is the right decision for almost everybody.

237
00:09:40,740 --> 00:09:41,780
Because it just really gives you

238
00:09:41,780 --> 00:09:43,260
like just an enormous set of benefits.

239
00:09:43,260 --> 00:09:45,820
And that's what I want to walk through here.

240
00:09:45,820 --> 00:09:50,180
The first benefit is it's an incredibly useful heuristic

241
00:09:50,180 --> 00:09:53,220
for identifying important problems.

242
00:09:53,220 --> 00:09:56,060
There's a famous kind of story of the band Van Halen

243
00:09:56,060 --> 00:09:58,940
back in the 80s having this very long, complicated contract

244
00:09:58,940 --> 00:10:01,420
for their venues or concert venues.

245
00:10:01,420 --> 00:10:03,340
And there was a little tiny item in the contract

246
00:10:03,340 --> 00:10:06,180
and it said that there should be M&Ms available

247
00:10:06,180 --> 00:10:07,660
on the craft services stand

248
00:10:07,660 --> 00:10:10,420
and there should be absolutely no brown M&Ms

249
00:10:10,420 --> 00:10:12,700
in the bowl of M&Ms.

250
00:10:12,700 --> 00:10:14,780
And it always seemed like kind of a ridiculous thing to do

251
00:10:14,780 --> 00:10:16,180
but it was actually very clever

252
00:10:16,180 --> 00:10:18,820
because Van Halen's contract was very complex

253
00:10:18,820 --> 00:10:20,580
and very detailed and involved all these

254
00:10:20,580 --> 00:10:22,540
like crazy pyrotechnics and stuff like that

255
00:10:22,540 --> 00:10:24,220
that were fairly dangerous.

256
00:10:24,220 --> 00:10:26,540
And so it was a useful heuristic for them to check

257
00:10:26,540 --> 00:10:29,140
and see if someone had carefully read the contract

258
00:10:30,180 --> 00:10:32,020
by just looking at the craft services table

259
00:10:32,020 --> 00:10:35,060
and seeing if there were any brown M&Ms in the bowl.

260
00:10:35,060 --> 00:10:37,020
And to me, that's the same kind of thing

261
00:10:37,020 --> 00:10:40,020
around using one big machine for machine learning.

262
00:10:40,020 --> 00:10:42,060
If your boss says to you,

263
00:10:42,060 --> 00:10:44,140
hey, I would like you to solve this sort of problem

264
00:10:44,140 --> 00:10:46,060
and I think machine learning could help.

265
00:10:46,060 --> 00:10:48,460
If you say to them, okay, great, I can do it

266
00:10:48,460 --> 00:10:50,300
and I can do it pretty quickly

267
00:10:50,300 --> 00:10:55,300
but I'm gonna need to like rent an R6A instance from AWS

268
00:10:55,300 --> 00:11:00,300
and it's gonna cost like $12 an hour, is that okay with you?

269
00:11:00,980 --> 00:11:02,860
Like, and they say, you know, actually, no

270
00:11:02,860 --> 00:11:04,140
it's not okay for you to do that.

271
00:11:04,140 --> 00:11:05,620
That's a great signal to the problem

272
00:11:05,620 --> 00:11:06,460
they're asking you to solve

273
00:11:06,460 --> 00:11:09,180
with machine learning is not actually that important.

274
00:11:09,180 --> 00:11:11,380
And machine learning should really only be used

275
00:11:11,380 --> 00:11:13,100
for very, very important problems.

276
00:11:13,100 --> 00:11:14,580
Like this is my opinion.

277
00:11:14,580 --> 00:11:17,140
We should use machine learning for important problems

278
00:11:18,060 --> 00:11:19,900
and we should be careful about how we do it.

279
00:11:19,900 --> 00:11:21,660
We should be thoughtful about how we do it.

280
00:11:21,660 --> 00:11:25,340
Like the cost is a feature in my opinion, not a bug.

281
00:11:26,660 --> 00:11:29,060
I think that if we get sort of distract ourselves

282
00:11:29,060 --> 00:11:31,420
by building like platforms and tools

283
00:11:31,420 --> 00:11:32,620
and all this kind of stuff

284
00:11:32,620 --> 00:11:34,580
we're not really like solving the real problem.

285
00:11:34,580 --> 00:11:36,820
We're kind of like solving around the problem.

286
00:11:36,820 --> 00:11:39,100
Whereas like if we're focused on like spending a lot

287
00:11:39,100 --> 00:11:41,060
of money to get an answer to this question

288
00:11:41,060 --> 00:11:45,380
very, very quickly, it focuses the mind.

289
00:11:45,380 --> 00:11:47,260
It keeps us like, it keeps our eye on the ball

290
00:11:47,260 --> 00:11:50,260
of like, what is the impact of us solving this problem?

291
00:11:50,260 --> 00:11:51,820
And if the impact is not enough money

292
00:11:51,820 --> 00:11:53,020
to like justify the cost,

293
00:11:53,020 --> 00:11:54,740
then like really like, why are we doing this?

294
00:11:54,740 --> 00:11:56,980
Like that's not a good use of our time.

295
00:11:56,980 --> 00:11:58,500
We can do other stuff instead.

296
00:12:00,700 --> 00:12:05,100
The other sort of great aspect of using a single big machine

297
00:12:05,100 --> 00:12:07,860
is it lets you save your innovation tokens.

298
00:12:07,860 --> 00:12:11,420
There's a great blog post by a guy named Dan McKinley.

299
00:12:11,420 --> 00:12:12,860
He goes by McFunley on the internet

300
00:12:12,860 --> 00:12:14,860
and he wrote it back in 2015

301
00:12:14,860 --> 00:12:17,620
and it's called Choose Boring Technology.

302
00:12:17,620 --> 00:12:19,460
And in this blog post, he introduced the notion

303
00:12:19,460 --> 00:12:21,340
of innovation tokens.

304
00:12:21,340 --> 00:12:23,020
The idea is that every technology company

305
00:12:23,020 --> 00:12:24,900
has a certain number of innovation tokens.

306
00:12:24,900 --> 00:12:27,980
There's like a small set of things where you are allowed

307
00:12:27,980 --> 00:12:30,540
to like do something super, super cool,

308
00:12:31,820 --> 00:12:34,460
like use some crazy new framework

309
00:12:34,460 --> 00:12:38,180
or some like ridiculous data store that you wrote yourself

310
00:12:38,180 --> 00:12:39,020
or something along those lines, right?

311
00:12:39,020 --> 00:12:40,660
And you get a few of these tokens

312
00:12:40,660 --> 00:12:42,460
but only a very few of them.

313
00:12:42,460 --> 00:12:46,100
And the great thing about eliminating sort of the network

314
00:12:46,100 --> 00:12:47,780
and eliminating distributed systems

315
00:12:47,780 --> 00:12:49,620
from your machine learning workflow

316
00:12:49,620 --> 00:12:52,980
is you basically get one of your innovation tokens back.

317
00:12:52,980 --> 00:12:57,900
So if you wanna use Ray or Dask or PyTorch

318
00:12:57,900 --> 00:13:01,100
and you've never used it before, it's okay

319
00:13:01,100 --> 00:13:03,780
because you're only running things on a single machine.

320
00:13:04,780 --> 00:13:06,500
There's nothing bad it can do to you.

321
00:13:06,500 --> 00:13:08,420
Like it can't hurt you and not for nothing.

322
00:13:08,420 --> 00:13:12,460
If you run a new sort of cool framework on a single machine

323
00:13:12,460 --> 00:13:15,540
and you don't like it and it causes you pain and suffering,

324
00:13:15,540 --> 00:13:17,300
that's great, that's fantastic news

325
00:13:17,300 --> 00:13:18,780
because then you can just like throw it away

326
00:13:18,780 --> 00:13:21,340
and go back to doing stuff using like multi-processing

327
00:13:21,340 --> 00:13:22,980
the way you were supposed to in the first place.

328
00:13:22,980 --> 00:13:24,300
Like that's awesome, awesome news.

329
00:13:24,300 --> 00:13:26,820
You should be really happy about that when that happens.

330
00:13:26,820 --> 00:13:29,380
So using one big machine is just a great way

331
00:13:29,380 --> 00:13:31,540
to like let yourself have some fun

332
00:13:31,540 --> 00:13:34,100
with some new cool tools, new cool frameworks

333
00:13:34,100 --> 00:13:35,780
without really incurring the cost

334
00:13:35,780 --> 00:13:36,740
that they would impose on you

335
00:13:36,740 --> 00:13:39,300
if you were trying to combine them with clustering,

336
00:13:39,300 --> 00:13:42,420
distributed systems, sort of all that horrible stuff, okay?

337
00:13:42,420 --> 00:13:44,860
Keep those innovation tokens, keep them fungible.

338
00:13:44,860 --> 00:13:49,820
When I originally like submitted this talk to NormConf,

339
00:13:49,820 --> 00:13:51,540
I tweeted about it thinking it would be funny

340
00:13:51,540 --> 00:13:54,460
and like I was trolling everybody with it.

341
00:13:54,460 --> 00:13:56,460
And I got this reply from Rob Story,

342
00:13:56,460 --> 00:13:58,420
he's an engineer at Stripe.

343
00:13:58,420 --> 00:14:01,380
And this is just kind of like was great and validating to me

344
00:14:01,380 --> 00:14:04,740
that Stripe still trains machine learning models

345
00:14:04,740 --> 00:14:06,700
using one big machine.

346
00:14:06,700 --> 00:14:09,820
And like basically my opinion is,

347
00:14:09,820 --> 00:14:12,380
machine learning is plenty hard on its own.

348
00:14:12,380 --> 00:14:15,260
And if one big machine is good enough for Stripe,

349
00:14:15,260 --> 00:14:16,780
it's good enough for you too.

350
00:14:19,460 --> 00:14:23,660
All right, one more sort of virtue, one more benefit,

351
00:14:23,660 --> 00:14:25,780
at least this is something I felt very acutely

352
00:14:25,780 --> 00:14:26,900
doing my COVID work.

353
00:14:28,700 --> 00:14:33,020
Make feedback loops fast, make feedback loops fast.

354
00:14:33,020 --> 00:14:36,820
This is Eric Bernardson who used to be at Spotify

355
00:14:36,820 --> 00:14:39,420
and wrote a lot of the recommender logic once upon a time.

356
00:14:39,420 --> 00:14:41,980
And is now working in a company called Modal

357
00:14:41,980 --> 00:14:45,340
building tooling to make it again, easy and fast

358
00:14:45,340 --> 00:14:48,620
to take advantage of gigantic machines on the cloud

359
00:14:48,620 --> 00:14:51,660
for data processing and machine learning use cases.

360
00:14:51,660 --> 00:14:53,700
And so I love, love, love this talk

361
00:14:53,700 --> 00:14:56,140
because it gets to the heart of what was my very,

362
00:14:56,140 --> 00:15:00,340
very favorite ML ops tool by a wide margin.

363
00:15:00,340 --> 00:15:02,420
And that's Htop.

364
00:15:02,420 --> 00:15:05,060
Htop, if you've never used Htop, I highly recommend it.

365
00:15:05,060 --> 00:15:08,940
Htop is a sort of slightly more sophisticated version of Top

366
00:15:08,940 --> 00:15:11,260
which Top is just a Unix process

367
00:15:11,260 --> 00:15:14,140
which you see what's running on your machine.

368
00:15:14,140 --> 00:15:16,660
Htop is that, it's Top,

369
00:15:16,660 --> 00:15:20,100
but it also shows you across all the cores you're running,

370
00:15:20,100 --> 00:15:21,780
how hard are they being run?

371
00:15:21,780 --> 00:15:23,300
How hard are they being utilized?

372
00:15:23,300 --> 00:15:24,140
Like all that kind of stuff.

373
00:15:24,140 --> 00:15:25,980
You can see the memory usage per process.

374
00:15:25,980 --> 00:15:27,980
It's really like great, great visibility

375
00:15:27,980 --> 00:15:30,700
into like what exactly is my data pipeline

376
00:15:30,700 --> 00:15:33,220
or my feature engineering pipeline or whatever.

377
00:15:33,220 --> 00:15:35,820
What is it doing on this machine right now?

378
00:15:35,820 --> 00:15:39,220
And then if you combine Htop with logs

379
00:15:39,220 --> 00:15:41,740
and the tail command to tell your logs,

380
00:15:41,740 --> 00:15:45,900
you have an interactive single pane of glass

381
00:15:45,900 --> 00:15:48,380
on a single machine into all the stuff

382
00:15:48,380 --> 00:15:50,580
that your machine learning model is doing.

383
00:15:50,580 --> 00:15:51,740
And this is fantastic.

384
00:15:51,740 --> 00:15:56,140
This is like a visceral, joyful way to experience

385
00:15:56,140 --> 00:15:58,580
like what your machine learning pipeline is doing

386
00:15:58,580 --> 00:16:01,340
and be very, very quick and easy to identify

387
00:16:01,340 --> 00:16:04,540
when things get stuck, when tasks run out of memory,

388
00:16:04,540 --> 00:16:07,460
when you're supposed to be running 64 tasks in parallel

389
00:16:07,460 --> 00:16:09,340
but you're only running like six

390
00:16:09,340 --> 00:16:10,620
or something like that for some reason.

391
00:16:10,620 --> 00:16:13,020
It just really makes this super, super easy to do,

392
00:16:13,020 --> 00:16:14,460
super easy to check.

393
00:16:14,460 --> 00:16:16,580
So it's just fantastic, fantastic tooling.

394
00:16:18,780 --> 00:16:20,860
How should you configure your machine?

395
00:16:20,860 --> 00:16:23,380
Let's talk about the three sort of rules here.

396
00:16:23,380 --> 00:16:25,820
First, you need to choose an instance type.

397
00:16:25,820 --> 00:16:27,060
And if you've never done this before,

398
00:16:27,060 --> 00:16:28,180
it can be very confusing.

399
00:16:28,180 --> 00:16:29,620
I was just looking at Amazon's page

400
00:16:29,620 --> 00:16:32,500
and there's like 576 different instance types.

401
00:16:32,500 --> 00:16:36,100
So how do I know which kind of instance I should run

402
00:16:36,100 --> 00:16:37,660
to do my machine learning problem?

403
00:16:37,660 --> 00:16:40,300
And the answer is RAM.

404
00:16:40,300 --> 00:16:42,460
RAM, as much RAM as possible,

405
00:16:42,460 --> 00:16:46,620
ideally enough so that you can fit all of your data

406
00:16:46,620 --> 00:16:47,860
in RAM itself.

407
00:16:47,860 --> 00:16:49,300
That's kind of like your goal.

408
00:16:49,300 --> 00:16:51,660
Like you wanna sort of take like the minimum

409
00:16:51,660 --> 00:16:53,460
of the amount of money you're allowed to spend

410
00:16:53,460 --> 00:16:56,020
and like how much RAM you need to fit everything,

411
00:16:56,020 --> 00:16:58,340
all of your data in RAM and like pick that,

412
00:16:58,340 --> 00:16:59,580
as much RAM as possible.

413
00:17:00,780 --> 00:17:03,700
Compute optimized instances are like a sucker's game.

414
00:17:03,700 --> 00:17:06,020
Basically like they're fine for video encoding

415
00:17:06,020 --> 00:17:06,980
and stuff, but they're not right

416
00:17:06,980 --> 00:17:09,140
for machine learning applications.

417
00:17:09,140 --> 00:17:11,860
Storage, NVMe, like you don't care about that stuff.

418
00:17:11,860 --> 00:17:14,340
All you really want is RAM, RAM, RAM, RAM.

419
00:17:14,340 --> 00:17:16,580
Just focus on RAM, get as much RAM as you can.

420
00:17:16,580 --> 00:17:17,820
That's sort of rule one.

421
00:17:19,820 --> 00:17:21,580
Once you have your RAM,

422
00:17:21,580 --> 00:17:23,020
you're gonna need some more storage.

423
00:17:23,020 --> 00:17:26,100
So one of like the funny kind of comedy of error things

424
00:17:26,100 --> 00:17:27,180
that happens to a lot of people

425
00:17:27,180 --> 00:17:28,940
when they're using one big machine.

426
00:17:28,940 --> 00:17:31,980
When you provision a new instance on EC2,

427
00:17:31,980 --> 00:17:34,700
it only has 20 gigabytes of disk,

428
00:17:34,700 --> 00:17:36,340
which while that's four times more

429
00:17:36,340 --> 00:17:39,140
than the size of the MySQL database that I ran in IBM,

430
00:17:39,140 --> 00:17:42,780
is in the modern day, a laughably small amount of disk.

431
00:17:42,780 --> 00:17:45,180
So what you need to do is go to EBS,

432
00:17:45,180 --> 00:17:46,420
like Elastic Block Store,

433
00:17:46,420 --> 00:17:49,100
and get like lots and lots and lots of disk,

434
00:17:49,100 --> 00:17:51,460
a terabyte of disk, however much disk you need,

435
00:17:51,460 --> 00:17:53,660
and then like configure it and attach it

436
00:17:53,660 --> 00:17:54,940
to your EC2 instance.

437
00:17:54,940 --> 00:17:56,940
So you have a really, really big disk

438
00:17:56,940 --> 00:17:58,300
that you can keep all your data in

439
00:17:58,300 --> 00:18:00,500
and do all your work on and all that kind of stuff.

440
00:18:00,500 --> 00:18:03,340
Super common rookie mistake to like skip that process

441
00:18:03,340 --> 00:18:05,580
and inadvertently do something where you just like

442
00:18:05,580 --> 00:18:07,180
use up all the disk on the machine

443
00:18:07,180 --> 00:18:09,060
and like end up killing it, stuff like that.

444
00:18:09,060 --> 00:18:12,300
So get your big machine with lots of RAM,

445
00:18:12,300 --> 00:18:13,740
go get a lot more storage.

446
00:18:15,780 --> 00:18:18,100
Next, clean up after yourself.

447
00:18:18,100 --> 00:18:21,420
Like when you're not using the machine, just turn it off.

448
00:18:21,420 --> 00:18:23,780
And when you're done using the EBS instance,

449
00:18:23,780 --> 00:18:26,700
this is sort of another sneaky thing that Amazon does.

450
00:18:26,700 --> 00:18:28,940
When you stop the EC2 instance,

451
00:18:28,940 --> 00:18:31,180
the EBS instance that's attached to it,

452
00:18:31,180 --> 00:18:33,620
that's like your big disk, it's still running.

453
00:18:33,620 --> 00:18:35,820
You're still paying for it.

454
00:18:35,820 --> 00:18:38,820
So be sure to like snapshot that EBS volume,

455
00:18:38,820 --> 00:18:42,140
save it away somewhere, or just copy your data out to S3

456
00:18:42,140 --> 00:18:44,380
and then shut the EBS instance down.

457
00:18:44,380 --> 00:18:47,220
Like get rid of it so you're not like setting money on fire,

458
00:18:47,220 --> 00:18:49,860
leaving that thing running for weeks on end.

459
00:18:49,860 --> 00:18:53,300
Be good, be like daddy robot, clean up after yourself.

460
00:18:56,420 --> 00:19:00,260
And then finally, like do the minimum viable

461
00:19:00,260 --> 00:19:02,220
amount of automation that you need to do

462
00:19:02,220 --> 00:19:04,180
to kind of not drive yourself crazy.

463
00:19:04,180 --> 00:19:08,020
Refer to this XKCD chart and be good about making sure

464
00:19:08,020 --> 00:19:10,340
that you're not like pushing things so hard

465
00:19:10,340 --> 00:19:14,500
that like you don't automate for automation sake.

466
00:19:14,500 --> 00:19:18,180
Machine learning is always kind of zero to one.

467
00:19:18,180 --> 00:19:19,860
It's always experimental.

468
00:19:19,860 --> 00:19:21,540
You're always gonna be changing things.

469
00:19:21,540 --> 00:19:24,860
So like don't over automate things too early.

470
00:19:24,860 --> 00:19:27,420
Like sort of premature automation is bad,

471
00:19:27,420 --> 00:19:30,220
is kind of my long-winded sort of thing here.

472
00:19:30,220 --> 00:19:32,340
Um, yeah.

473
00:19:32,340 --> 00:19:35,100
And with that, like go forth and prosper.

474
00:19:35,100 --> 00:19:38,100
Like brag to your friends about running, you know,

475
00:19:38,100 --> 00:19:42,700
192 cores with one and a half terabytes of RAM.

476
00:19:42,700 --> 00:19:44,180
For what it's worth, your kids will think

477
00:19:44,180 --> 00:19:45,980
that's a laughably small amount of RAM

478
00:19:45,980 --> 00:19:47,620
and a laughably small number of cores.

479
00:19:47,620 --> 00:19:49,340
Like their phones are gonna have way more storage

480
00:19:49,340 --> 00:19:50,260
than that, right?

481
00:19:50,260 --> 00:19:52,580
But for now, that stuff's pretty cool.

482
00:19:52,580 --> 00:19:54,780
Just as cool as like a five gigabyte database

483
00:19:54,780 --> 00:19:57,580
was way back in 2001.

484
00:19:57,580 --> 00:19:59,540
And with that, thank you very much.

485
00:19:59,540 --> 00:20:24,540
And I am happy to take questions.

